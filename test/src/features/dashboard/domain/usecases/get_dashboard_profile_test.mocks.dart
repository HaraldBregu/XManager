// Mocks generated by Mockito 5.4.0 from annotations
// in xmanager/test/src/features/dashboard/domain/usecases/get_dashboard_profile_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:xmanager/src/core/domain/entities/dashboard_player_entity.dart'
    as _i8;
import 'package:xmanager/src/core/domain/entities/dashboard_profile_entity.dart'
    as _i6;
import 'package:xmanager/src/core/domain/entities/dashboard_training_entity.dart'
    as _i7;
import 'package:xmanager/src/core/domain/repository/dashboard_repository.dart'
    as _i3;
import 'package:xmanager/src/core/failures.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DashboardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardRepository extends _i1.Mock
    implements _i3.DashboardRepository {
  MockDashboardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.DashboardProfileEntity>>
      getProfile() => (super.noSuchMethod(
            Invocation.method(
              #getProfile,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i6.DashboardProfileEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.DashboardProfileEntity>(
              this,
              Invocation.method(
                #getProfile,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i6.DashboardProfileEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.DashboardTrainingEntity>>
      getTraining() => (super.noSuchMethod(
            Invocation.method(
              #getTraining,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i7.DashboardTrainingEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.DashboardTrainingEntity>(
              this,
              Invocation.method(
                #getTraining,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, _i7.DashboardTrainingEntity>>);
  @override
  _i4.Future<
      _i2
          .Either<_i5.Failure, List<_i8.DashboardPlayerEntity>>> getPlayers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayers,
          [],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, List<_i8.DashboardPlayerEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i8.DashboardPlayerEntity>>(
          this,
          Invocation.method(
            #getPlayers,
            [],
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.DashboardPlayerEntity>>>);
}
