// Mocks generated by Mockito 5.4.4 from annotations
// in xmanager/test/src/data/repositories/remote_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:xmanager/src/shared/data/datasources/local/network_datasource.dart'
    as _i7;
import 'package:xmanager/src/shared/data/datasources/remote/remote_datasource.dart'
    as _i3;
import 'package:xmanager/src/shared/data/models/device_model.dart' as _i6;
import 'package:xmanager/src/shared/data/models/profile_model.dart' as _i2;
import 'package:xmanager/src/shared/data/models/user_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProfileModel_0 extends _i1.SmartFake implements _i2.ProfileModel {
  _FakeProfileModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i3.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.UserModel?> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _i4.Future<_i5.UserModel?>.value(),
      ) as _i4.Future<_i5.UserModel?>);

  @override
  _i4.Future<void> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> register(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.ProfileModel> getCurrentProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.ProfileModel>.value(_FakeProfileModel_0(
          this,
          Invocation.method(
            #getCurrentProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ProfileModel>);

  @override
  _i4.Future<List<_i6.DeviceModel>> getMyDevices() => (super.noSuchMethod(
        Invocation.method(
          #getMyDevices,
          [],
        ),
        returnValue:
            _i4.Future<List<_i6.DeviceModel>>.value(<_i6.DeviceModel>[]),
      ) as _i4.Future<List<_i6.DeviceModel>>);
}

/// A class which mocks [NetworkDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkDataSource extends _i1.Mock implements _i7.NetworkDataSource {
  MockNetworkDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
