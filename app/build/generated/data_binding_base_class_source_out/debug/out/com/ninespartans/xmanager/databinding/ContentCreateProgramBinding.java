// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentCreateProgramBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomSection;

  @NonNull
  public final MaterialButton createSession;

  @NonNull
  public final TextView headerDescription;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final ListView listView;

  @NonNull
  public final TextInputLayout nameInputText;

  @NonNull
  public final MaterialButton saveProgram;

  @NonNull
  public final LinearLayout topSection;

  private ContentCreateProgramBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomSection, @NonNull MaterialButton createSession,
      @NonNull TextView headerDescription, @NonNull TextView headerTitle,
      @NonNull ListView listView, @NonNull TextInputLayout nameInputText,
      @NonNull MaterialButton saveProgram, @NonNull LinearLayout topSection) {
    this.rootView = rootView;
    this.bottomSection = bottomSection;
    this.createSession = createSession;
    this.headerDescription = headerDescription;
    this.headerTitle = headerTitle;
    this.listView = listView;
    this.nameInputText = nameInputText;
    this.saveProgram = saveProgram;
    this.topSection = topSection;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentCreateProgramBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentCreateProgramBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_create_program, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentCreateProgramBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_section;
      LinearLayout bottomSection = ViewBindings.findChildViewById(rootView, id);
      if (bottomSection == null) {
        break missingId;
      }

      id = R.id.createSession;
      MaterialButton createSession = ViewBindings.findChildViewById(rootView, id);
      if (createSession == null) {
        break missingId;
      }

      id = R.id.headerDescription;
      TextView headerDescription = ViewBindings.findChildViewById(rootView, id);
      if (headerDescription == null) {
        break missingId;
      }

      id = R.id.headerTitle;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.listView;
      ListView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.nameInputText;
      TextInputLayout nameInputText = ViewBindings.findChildViewById(rootView, id);
      if (nameInputText == null) {
        break missingId;
      }

      id = R.id.saveProgram;
      MaterialButton saveProgram = ViewBindings.findChildViewById(rootView, id);
      if (saveProgram == null) {
        break missingId;
      }

      id = R.id.top_section;
      LinearLayout topSection = ViewBindings.findChildViewById(rootView, id);
      if (topSection == null) {
        break missingId;
      }

      return new ContentCreateProgramBinding((RelativeLayout) rootView, bottomSection,
          createSession, headerDescription, headerTitle, listView, nameInputText, saveProgram,
          topSection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
