// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentEditAccountBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputLayout ageInputText;

  @NonNull
  public final LinearLayout bottomSection;

  @NonNull
  public final LinearLayout containerSection;

  @NonNull
  public final AutoCompleteTextView dropdownAgeText;

  @NonNull
  public final TextInputLayout fullNameInputText;

  @NonNull
  public final TextView headerDescription;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final TextInputLayout headlineInputText;

  @NonNull
  public final LinearLayout inputFields;

  @NonNull
  public final MaterialButton saveButton;

  private ContentEditAccountBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputLayout ageInputText, @NonNull LinearLayout bottomSection,
      @NonNull LinearLayout containerSection, @NonNull AutoCompleteTextView dropdownAgeText,
      @NonNull TextInputLayout fullNameInputText, @NonNull TextView headerDescription,
      @NonNull TextView headerTitle, @NonNull TextInputLayout headlineInputText,
      @NonNull LinearLayout inputFields, @NonNull MaterialButton saveButton) {
    this.rootView = rootView;
    this.ageInputText = ageInputText;
    this.bottomSection = bottomSection;
    this.containerSection = containerSection;
    this.dropdownAgeText = dropdownAgeText;
    this.fullNameInputText = fullNameInputText;
    this.headerDescription = headerDescription;
    this.headerTitle = headerTitle;
    this.headlineInputText = headlineInputText;
    this.inputFields = inputFields;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentEditAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentEditAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_edit_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentEditAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageInputText;
      TextInputLayout ageInputText = ViewBindings.findChildViewById(rootView, id);
      if (ageInputText == null) {
        break missingId;
      }

      id = R.id.bottom_section;
      LinearLayout bottomSection = ViewBindings.findChildViewById(rootView, id);
      if (bottomSection == null) {
        break missingId;
      }

      id = R.id.containerSection;
      LinearLayout containerSection = ViewBindings.findChildViewById(rootView, id);
      if (containerSection == null) {
        break missingId;
      }

      id = R.id.dropdownAgeText;
      AutoCompleteTextView dropdownAgeText = ViewBindings.findChildViewById(rootView, id);
      if (dropdownAgeText == null) {
        break missingId;
      }

      id = R.id.fullNameInputText;
      TextInputLayout fullNameInputText = ViewBindings.findChildViewById(rootView, id);
      if (fullNameInputText == null) {
        break missingId;
      }

      id = R.id.header_description;
      TextView headerDescription = ViewBindings.findChildViewById(rootView, id);
      if (headerDescription == null) {
        break missingId;
      }

      id = R.id.header_title;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.headlineInputText;
      TextInputLayout headlineInputText = ViewBindings.findChildViewById(rootView, id);
      if (headlineInputText == null) {
        break missingId;
      }

      id = R.id.input_fields;
      LinearLayout inputFields = ViewBindings.findChildViewById(rootView, id);
      if (inputFields == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ContentEditAccountBinding((RelativeLayout) rootView, ageInputText, bottomSection,
          containerSection, dropdownAgeText, fullNameInputText, headerDescription, headerTitle,
          headlineInputText, inputFields, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
