// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMainPlayerDeviceItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView container;

  @NonNull
  public final MaterialButton detailButton;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final TextView deviceState;

  @NonNull
  public final TextView deviceType;

  @NonNull
  public final TextView deviceVersion;

  @NonNull
  public final LinearProgressIndicator playerProgressProgram;

  @NonNull
  public final TextView programPlayerTimer;

  @NonNull
  public final TextView programPlayerTitle;

  @NonNull
  public final LinearLayout programSessionSection;

  private RowMainPlayerDeviceItemBinding(@NonNull LinearLayout rootView,
      @NonNull CardView container, @NonNull MaterialButton detailButton,
      @NonNull TextView deviceName, @NonNull TextView deviceState, @NonNull TextView deviceType,
      @NonNull TextView deviceVersion, @NonNull LinearProgressIndicator playerProgressProgram,
      @NonNull TextView programPlayerTimer, @NonNull TextView programPlayerTitle,
      @NonNull LinearLayout programSessionSection) {
    this.rootView = rootView;
    this.container = container;
    this.detailButton = detailButton;
    this.deviceName = deviceName;
    this.deviceState = deviceState;
    this.deviceType = deviceType;
    this.deviceVersion = deviceVersion;
    this.playerProgressProgram = playerProgressProgram;
    this.programPlayerTimer = programPlayerTimer;
    this.programPlayerTitle = programPlayerTitle;
    this.programSessionSection = programSessionSection;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMainPlayerDeviceItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMainPlayerDeviceItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_main_player_device_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMainPlayerDeviceItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      CardView container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.detailButton;
      MaterialButton detailButton = ViewBindings.findChildViewById(rootView, id);
      if (detailButton == null) {
        break missingId;
      }

      id = R.id.deviceName;
      TextView deviceName = ViewBindings.findChildViewById(rootView, id);
      if (deviceName == null) {
        break missingId;
      }

      id = R.id.deviceState;
      TextView deviceState = ViewBindings.findChildViewById(rootView, id);
      if (deviceState == null) {
        break missingId;
      }

      id = R.id.deviceType;
      TextView deviceType = ViewBindings.findChildViewById(rootView, id);
      if (deviceType == null) {
        break missingId;
      }

      id = R.id.deviceVersion;
      TextView deviceVersion = ViewBindings.findChildViewById(rootView, id);
      if (deviceVersion == null) {
        break missingId;
      }

      id = R.id.playerProgressProgram;
      LinearProgressIndicator playerProgressProgram = ViewBindings.findChildViewById(rootView, id);
      if (playerProgressProgram == null) {
        break missingId;
      }

      id = R.id.programPlayerTimer;
      TextView programPlayerTimer = ViewBindings.findChildViewById(rootView, id);
      if (programPlayerTimer == null) {
        break missingId;
      }

      id = R.id.programPlayerTitle;
      TextView programPlayerTitle = ViewBindings.findChildViewById(rootView, id);
      if (programPlayerTitle == null) {
        break missingId;
      }

      id = R.id.programSessionSection;
      LinearLayout programSessionSection = ViewBindings.findChildViewById(rootView, id);
      if (programSessionSection == null) {
        break missingId;
      }

      return new RowMainPlayerDeviceItemBinding((LinearLayout) rootView, container, detailButton,
          deviceName, deviceState, deviceType, deviceVersion, playerProgressProgram,
          programPlayerTimer, programPlayerTitle, programSessionSection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
