// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentAccountBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout dinamoVersionSection;

  @NonNull
  public final MaterialButton editAccount;

  @NonNull
  public final TextView fullname;

  @NonNull
  public final ImageView userImageView;

  @NonNull
  public final LinearLayout userSection;

  @NonNull
  public final TextView userTitle;

  @NonNull
  public final TextView xmanagerDescription;

  @NonNull
  public final TextView xmanagerTitle;

  @NonNull
  public final LinearLayout xmanagerVersionSection;

  private ContentAccountBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout dinamoVersionSection, @NonNull MaterialButton editAccount,
      @NonNull TextView fullname, @NonNull ImageView userImageView,
      @NonNull LinearLayout userSection, @NonNull TextView userTitle,
      @NonNull TextView xmanagerDescription, @NonNull TextView xmanagerTitle,
      @NonNull LinearLayout xmanagerVersionSection) {
    this.rootView = rootView;
    this.dinamoVersionSection = dinamoVersionSection;
    this.editAccount = editAccount;
    this.fullname = fullname;
    this.userImageView = userImageView;
    this.userSection = userSection;
    this.userTitle = userTitle;
    this.xmanagerDescription = xmanagerDescription;
    this.xmanagerTitle = xmanagerTitle;
    this.xmanagerVersionSection = xmanagerVersionSection;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dinamoVersionSection;
      LinearLayout dinamoVersionSection = ViewBindings.findChildViewById(rootView, id);
      if (dinamoVersionSection == null) {
        break missingId;
      }

      id = R.id.editAccount;
      MaterialButton editAccount = ViewBindings.findChildViewById(rootView, id);
      if (editAccount == null) {
        break missingId;
      }

      id = R.id.fullname;
      TextView fullname = ViewBindings.findChildViewById(rootView, id);
      if (fullname == null) {
        break missingId;
      }

      id = R.id.userImageView;
      ImageView userImageView = ViewBindings.findChildViewById(rootView, id);
      if (userImageView == null) {
        break missingId;
      }

      id = R.id.userSection;
      LinearLayout userSection = ViewBindings.findChildViewById(rootView, id);
      if (userSection == null) {
        break missingId;
      }

      id = R.id.userTitle;
      TextView userTitle = ViewBindings.findChildViewById(rootView, id);
      if (userTitle == null) {
        break missingId;
      }

      id = R.id.xmanagerDescription;
      TextView xmanagerDescription = ViewBindings.findChildViewById(rootView, id);
      if (xmanagerDescription == null) {
        break missingId;
      }

      id = R.id.xmanagerTitle;
      TextView xmanagerTitle = ViewBindings.findChildViewById(rootView, id);
      if (xmanagerTitle == null) {
        break missingId;
      }

      id = R.id.xmanagerVersionSection;
      LinearLayout xmanagerVersionSection = ViewBindings.findChildViewById(rootView, id);
      if (xmanagerVersionSection == null) {
        break missingId;
      }

      return new ContentAccountBinding((RelativeLayout) rootView, dinamoVersionSection, editAccount,
          fullname, userImageView, userSection, userTitle, xmanagerDescription, xmanagerTitle,
          xmanagerVersionSection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
