// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMainPlayerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addPlayerDevice;

  @NonNull
  public final RelativeLayout containerView;

  @NonNull
  public final LinearLayout deviceInfoSection;

  @NonNull
  public final TextView devicesConnectionTitle;

  @NonNull
  public final RelativeLayout headerView;

  @NonNull
  public final MaterialButton showOptions;

  @NonNull
  public final TextView textViewPlayerName;

  private RowMainPlayerBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addPlayerDevice, @NonNull RelativeLayout containerView,
      @NonNull LinearLayout deviceInfoSection, @NonNull TextView devicesConnectionTitle,
      @NonNull RelativeLayout headerView, @NonNull MaterialButton showOptions,
      @NonNull TextView textViewPlayerName) {
    this.rootView = rootView;
    this.addPlayerDevice = addPlayerDevice;
    this.containerView = containerView;
    this.deviceInfoSection = deviceInfoSection;
    this.devicesConnectionTitle = devicesConnectionTitle;
    this.headerView = headerView;
    this.showOptions = showOptions;
    this.textViewPlayerName = textViewPlayerName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMainPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMainPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_main_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMainPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPlayerDevice;
      MaterialButton addPlayerDevice = ViewBindings.findChildViewById(rootView, id);
      if (addPlayerDevice == null) {
        break missingId;
      }

      id = R.id.container_view;
      RelativeLayout containerView = ViewBindings.findChildViewById(rootView, id);
      if (containerView == null) {
        break missingId;
      }

      id = R.id.deviceInfoSection;
      LinearLayout deviceInfoSection = ViewBindings.findChildViewById(rootView, id);
      if (deviceInfoSection == null) {
        break missingId;
      }

      id = R.id.devicesConnectionTitle;
      TextView devicesConnectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (devicesConnectionTitle == null) {
        break missingId;
      }

      id = R.id.header_view;
      RelativeLayout headerView = ViewBindings.findChildViewById(rootView, id);
      if (headerView == null) {
        break missingId;
      }

      id = R.id.showOptions;
      MaterialButton showOptions = ViewBindings.findChildViewById(rootView, id);
      if (showOptions == null) {
        break missingId;
      }

      id = R.id.textViewPlayerName;
      TextView textViewPlayerName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPlayerName == null) {
        break missingId;
      }

      return new RowMainPlayerBinding((ConstraintLayout) rootView, addPlayerDevice, containerView,
          deviceInfoSection, devicesConnectionTitle, headerView, showOptions, textViewPlayerName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
