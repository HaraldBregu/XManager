// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentPermissionsManagerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton activateBluetooth;

  @NonNull
  public final MaterialButton activateFineLocation;

  @NonNull
  public final MaterialButton activateGps;

  @NonNull
  public final LinearLayout bleStatusActiveSection;

  @NonNull
  public final ImageView bleStatusImage;

  @NonNull
  public final TextView bleStatusTextView;

  @NonNull
  public final LinearLayout bottomSection;

  @NonNull
  public final LinearLayout containerSection;

  @NonNull
  public final RelativeLayout fineLocationStatusActiveSection;

  @NonNull
  public final ImageView fineLocationStatusImage;

  @NonNull
  public final TextView fineLocationStatusTextView;

  @NonNull
  public final LinearLayout gpsStatusActiveSection;

  @NonNull
  public final ImageView gpsStatusImage;

  @NonNull
  public final TextView gpsStatusTextView;

  @NonNull
  public final TextView headerDescription;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final LinearLayout settingsSection;

  @NonNull
  public final TextView settingsText;

  private ContentPermissionsManagerBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton activateBluetooth, @NonNull MaterialButton activateFineLocation,
      @NonNull MaterialButton activateGps, @NonNull LinearLayout bleStatusActiveSection,
      @NonNull ImageView bleStatusImage, @NonNull TextView bleStatusTextView,
      @NonNull LinearLayout bottomSection, @NonNull LinearLayout containerSection,
      @NonNull RelativeLayout fineLocationStatusActiveSection,
      @NonNull ImageView fineLocationStatusImage, @NonNull TextView fineLocationStatusTextView,
      @NonNull LinearLayout gpsStatusActiveSection, @NonNull ImageView gpsStatusImage,
      @NonNull TextView gpsStatusTextView, @NonNull TextView headerDescription,
      @NonNull TextView headerTitle, @NonNull MaterialButton saveButton,
      @NonNull LinearLayout settingsSection, @NonNull TextView settingsText) {
    this.rootView = rootView;
    this.activateBluetooth = activateBluetooth;
    this.activateFineLocation = activateFineLocation;
    this.activateGps = activateGps;
    this.bleStatusActiveSection = bleStatusActiveSection;
    this.bleStatusImage = bleStatusImage;
    this.bleStatusTextView = bleStatusTextView;
    this.bottomSection = bottomSection;
    this.containerSection = containerSection;
    this.fineLocationStatusActiveSection = fineLocationStatusActiveSection;
    this.fineLocationStatusImage = fineLocationStatusImage;
    this.fineLocationStatusTextView = fineLocationStatusTextView;
    this.gpsStatusActiveSection = gpsStatusActiveSection;
    this.gpsStatusImage = gpsStatusImage;
    this.gpsStatusTextView = gpsStatusTextView;
    this.headerDescription = headerDescription;
    this.headerTitle = headerTitle;
    this.saveButton = saveButton;
    this.settingsSection = settingsSection;
    this.settingsText = settingsText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentPermissionsManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentPermissionsManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_permissions_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentPermissionsManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activateBluetooth;
      MaterialButton activateBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (activateBluetooth == null) {
        break missingId;
      }

      id = R.id.activateFineLocation;
      MaterialButton activateFineLocation = ViewBindings.findChildViewById(rootView, id);
      if (activateFineLocation == null) {
        break missingId;
      }

      id = R.id.activateGps;
      MaterialButton activateGps = ViewBindings.findChildViewById(rootView, id);
      if (activateGps == null) {
        break missingId;
      }

      id = R.id.bleStatusActiveSection;
      LinearLayout bleStatusActiveSection = ViewBindings.findChildViewById(rootView, id);
      if (bleStatusActiveSection == null) {
        break missingId;
      }

      id = R.id.bleStatusImage;
      ImageView bleStatusImage = ViewBindings.findChildViewById(rootView, id);
      if (bleStatusImage == null) {
        break missingId;
      }

      id = R.id.bleStatusTextView;
      TextView bleStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (bleStatusTextView == null) {
        break missingId;
      }

      id = R.id.bottom_section;
      LinearLayout bottomSection = ViewBindings.findChildViewById(rootView, id);
      if (bottomSection == null) {
        break missingId;
      }

      id = R.id.containerSection;
      LinearLayout containerSection = ViewBindings.findChildViewById(rootView, id);
      if (containerSection == null) {
        break missingId;
      }

      id = R.id.fineLocationStatusActiveSection;
      RelativeLayout fineLocationStatusActiveSection = ViewBindings.findChildViewById(rootView, id);
      if (fineLocationStatusActiveSection == null) {
        break missingId;
      }

      id = R.id.fineLocationStatusImage;
      ImageView fineLocationStatusImage = ViewBindings.findChildViewById(rootView, id);
      if (fineLocationStatusImage == null) {
        break missingId;
      }

      id = R.id.fineLocationStatusTextView;
      TextView fineLocationStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (fineLocationStatusTextView == null) {
        break missingId;
      }

      id = R.id.gpsStatusActiveSection;
      LinearLayout gpsStatusActiveSection = ViewBindings.findChildViewById(rootView, id);
      if (gpsStatusActiveSection == null) {
        break missingId;
      }

      id = R.id.gpsStatusImage;
      ImageView gpsStatusImage = ViewBindings.findChildViewById(rootView, id);
      if (gpsStatusImage == null) {
        break missingId;
      }

      id = R.id.gpsStatusTextView;
      TextView gpsStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (gpsStatusTextView == null) {
        break missingId;
      }

      id = R.id.header_description;
      TextView headerDescription = ViewBindings.findChildViewById(rootView, id);
      if (headerDescription == null) {
        break missingId;
      }

      id = R.id.header_title;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.settingsSection;
      LinearLayout settingsSection = ViewBindings.findChildViewById(rootView, id);
      if (settingsSection == null) {
        break missingId;
      }

      id = R.id.settingsText;
      TextView settingsText = ViewBindings.findChildViewById(rootView, id);
      if (settingsText == null) {
        break missingId;
      }

      return new ContentPermissionsManagerBinding((RelativeLayout) rootView, activateBluetooth,
          activateFineLocation, activateGps, bleStatusActiveSection, bleStatusImage,
          bleStatusTextView, bottomSection, containerSection, fineLocationStatusActiveSection,
          fineLocationStatusImage, fineLocationStatusTextView, gpsStatusActiveSection,
          gpsStatusImage, gpsStatusTextView, headerDescription, headerTitle, saveButton,
          settingsSection, settingsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
