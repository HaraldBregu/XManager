// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowCreateProgramStepBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton cancelProgramStep;

  @NonNull
  public final TextView descriptionProgram;

  @NonNull
  public final RelativeLayout headerView;

  @NonNull
  public final TextView nameProgram;

  @NonNull
  public final TextView stepNumber;

  private RowCreateProgramStepBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton cancelProgramStep, @NonNull TextView descriptionProgram,
      @NonNull RelativeLayout headerView, @NonNull TextView nameProgram,
      @NonNull TextView stepNumber) {
    this.rootView = rootView;
    this.cancelProgramStep = cancelProgramStep;
    this.descriptionProgram = descriptionProgram;
    this.headerView = headerView;
    this.nameProgram = nameProgram;
    this.stepNumber = stepNumber;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCreateProgramStepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCreateProgramStepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_create_program_step, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCreateProgramStepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelProgramStep;
      MaterialButton cancelProgramStep = ViewBindings.findChildViewById(rootView, id);
      if (cancelProgramStep == null) {
        break missingId;
      }

      id = R.id.descriptionProgram;
      TextView descriptionProgram = ViewBindings.findChildViewById(rootView, id);
      if (descriptionProgram == null) {
        break missingId;
      }

      id = R.id.header_view;
      RelativeLayout headerView = ViewBindings.findChildViewById(rootView, id);
      if (headerView == null) {
        break missingId;
      }

      id = R.id.nameProgram;
      TextView nameProgram = ViewBindings.findChildViewById(rootView, id);
      if (nameProgram == null) {
        break missingId;
      }

      id = R.id.stepNumber;
      TextView stepNumber = ViewBindings.findChildViewById(rootView, id);
      if (stepNumber == null) {
        break missingId;
      }

      return new RowCreateProgramStepBinding((ConstraintLayout) rootView, cancelProgramStep,
          descriptionProgram, headerView, nameProgram, stepNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
