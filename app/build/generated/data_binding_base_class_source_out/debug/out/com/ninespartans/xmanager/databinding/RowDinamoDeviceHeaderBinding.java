// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowDinamoDeviceHeaderBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView appDescription;

  @NonNull
  public final TextView appName;

  @NonNull
  public final ImageView userImageView;

  @NonNull
  public final LinearLayout userSection;

  @NonNull
  public final RelativeLayout userSectionHeader;

  private RowDinamoDeviceHeaderBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView appDescription, @NonNull TextView appName, @NonNull ImageView userImageView,
      @NonNull LinearLayout userSection, @NonNull RelativeLayout userSectionHeader) {
    this.rootView = rootView;
    this.appDescription = appDescription;
    this.appName = appName;
    this.userImageView = userImageView;
    this.userSection = userSection;
    this.userSectionHeader = userSectionHeader;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowDinamoDeviceHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowDinamoDeviceHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_dinamo_device_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowDinamoDeviceHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appDescription;
      TextView appDescription = ViewBindings.findChildViewById(rootView, id);
      if (appDescription == null) {
        break missingId;
      }

      id = R.id.appName;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.userImageView;
      ImageView userImageView = ViewBindings.findChildViewById(rootView, id);
      if (userImageView == null) {
        break missingId;
      }

      id = R.id.userSection;
      LinearLayout userSection = ViewBindings.findChildViewById(rootView, id);
      if (userSection == null) {
        break missingId;
      }

      id = R.id.user_section_header;
      RelativeLayout userSectionHeader = ViewBindings.findChildViewById(rootView, id);
      if (userSectionHeader == null) {
        break missingId;
      }

      return new RowDinamoDeviceHeaderBinding((MaterialCardView) rootView, appDescription, appName,
          userImageView, userSection, userSectionHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
