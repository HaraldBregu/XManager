// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowDeviceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView leftShoeImage;

  @NonNull
  public final ImageView rightShoeImage;

  @NonNull
  public final LinearLayout shoePairContainer;

  @NonNull
  public final TextView textViewDeviceName;

  @NonNull
  public final TextView textViewDeviceNameTitle;

  @NonNull
  public final TextView textViewMacAddress;

  @NonNull
  public final TextView textViewPlayer;

  private RowDeviceBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView leftShoeImage,
      @NonNull ImageView rightShoeImage, @NonNull LinearLayout shoePairContainer,
      @NonNull TextView textViewDeviceName, @NonNull TextView textViewDeviceNameTitle,
      @NonNull TextView textViewMacAddress, @NonNull TextView textViewPlayer) {
    this.rootView = rootView;
    this.leftShoeImage = leftShoeImage;
    this.rightShoeImage = rightShoeImage;
    this.shoePairContainer = shoePairContainer;
    this.textViewDeviceName = textViewDeviceName;
    this.textViewDeviceNameTitle = textViewDeviceNameTitle;
    this.textViewMacAddress = textViewMacAddress;
    this.textViewPlayer = textViewPlayer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.leftShoeImage;
      ImageView leftShoeImage = ViewBindings.findChildViewById(rootView, id);
      if (leftShoeImage == null) {
        break missingId;
      }

      id = R.id.rightShoeImage;
      ImageView rightShoeImage = ViewBindings.findChildViewById(rootView, id);
      if (rightShoeImage == null) {
        break missingId;
      }

      id = R.id.shoePairContainer;
      LinearLayout shoePairContainer = ViewBindings.findChildViewById(rootView, id);
      if (shoePairContainer == null) {
        break missingId;
      }

      id = R.id.textViewDeviceName;
      TextView textViewDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeviceName == null) {
        break missingId;
      }

      id = R.id.textViewDeviceNameTitle;
      TextView textViewDeviceNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeviceNameTitle == null) {
        break missingId;
      }

      id = R.id.textViewMacAddress;
      TextView textViewMacAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewMacAddress == null) {
        break missingId;
      }

      id = R.id.textViewPlayer;
      TextView textViewPlayer = ViewBindings.findChildViewById(rootView, id);
      if (textViewPlayer == null) {
        break missingId;
      }

      return new RowDeviceBinding((ConstraintLayout) rootView, leftShoeImage, rightShoeImage,
          shoePairContainer, textViewDeviceName, textViewDeviceNameTitle, textViewMacAddress,
          textViewPlayer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
