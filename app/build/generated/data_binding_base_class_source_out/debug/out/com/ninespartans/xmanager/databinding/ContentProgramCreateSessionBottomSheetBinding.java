// Generated by view binder compiler. Do not edit!
package com.ninespartans.xmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.slider.Slider;
import com.ninespartans.xmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentProgramCreateSessionBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton blinkLight;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView durationDescription;

  @NonNull
  public final Slider durationSlider;

  @NonNull
  public final TextView durationTitle;

  @NonNull
  public final Button extern;

  @NonNull
  public final RadioButton fadeLight;

  @NonNull
  public final Button intern;

  @NonNull
  public final TextView ledTypeTitle;

  @NonNull
  public final TextView lightPositionTitle;

  @NonNull
  public final RadioGroup radioGroupIndicator;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final ImageView shoePairImageView;

  @NonNull
  public final LinearLayout shoePairImageViewContainer;

  @NonNull
  public final RadioButton staticLight;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialButtonToggleGroup toggleButtonDirection;

  @NonNull
  public final Button top;

  @NonNull
  public final Button topExtern;

  @NonNull
  public final Button topIntern;

  private ContentProgramCreateSessionBottomSheetBinding(@NonNull LinearLayout rootView,
      @NonNull RadioButton blinkLight, @NonNull TextView description,
      @NonNull TextView durationDescription, @NonNull Slider durationSlider,
      @NonNull TextView durationTitle, @NonNull Button extern, @NonNull RadioButton fadeLight,
      @NonNull Button intern, @NonNull TextView ledTypeTitle, @NonNull TextView lightPositionTitle,
      @NonNull RadioGroup radioGroupIndicator, @NonNull MaterialButton saveButton,
      @NonNull ImageView shoePairImageView, @NonNull LinearLayout shoePairImageViewContainer,
      @NonNull RadioButton staticLight, @NonNull TextView title,
      @NonNull MaterialButtonToggleGroup toggleButtonDirection, @NonNull Button top,
      @NonNull Button topExtern, @NonNull Button topIntern) {
    this.rootView = rootView;
    this.blinkLight = blinkLight;
    this.description = description;
    this.durationDescription = durationDescription;
    this.durationSlider = durationSlider;
    this.durationTitle = durationTitle;
    this.extern = extern;
    this.fadeLight = fadeLight;
    this.intern = intern;
    this.ledTypeTitle = ledTypeTitle;
    this.lightPositionTitle = lightPositionTitle;
    this.radioGroupIndicator = radioGroupIndicator;
    this.saveButton = saveButton;
    this.shoePairImageView = shoePairImageView;
    this.shoePairImageViewContainer = shoePairImageViewContainer;
    this.staticLight = staticLight;
    this.title = title;
    this.toggleButtonDirection = toggleButtonDirection;
    this.top = top;
    this.topExtern = topExtern;
    this.topIntern = topIntern;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentProgramCreateSessionBottomSheetBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentProgramCreateSessionBottomSheetBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_program_create_session_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentProgramCreateSessionBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blink_light;
      RadioButton blinkLight = ViewBindings.findChildViewById(rootView, id);
      if (blinkLight == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.durationDescription;
      TextView durationDescription = ViewBindings.findChildViewById(rootView, id);
      if (durationDescription == null) {
        break missingId;
      }

      id = R.id.durationSlider;
      Slider durationSlider = ViewBindings.findChildViewById(rootView, id);
      if (durationSlider == null) {
        break missingId;
      }

      id = R.id.durationTitle;
      TextView durationTitle = ViewBindings.findChildViewById(rootView, id);
      if (durationTitle == null) {
        break missingId;
      }

      id = R.id.extern;
      Button extern = ViewBindings.findChildViewById(rootView, id);
      if (extern == null) {
        break missingId;
      }

      id = R.id.fade_light;
      RadioButton fadeLight = ViewBindings.findChildViewById(rootView, id);
      if (fadeLight == null) {
        break missingId;
      }

      id = R.id.intern;
      Button intern = ViewBindings.findChildViewById(rootView, id);
      if (intern == null) {
        break missingId;
      }

      id = R.id.ledTypeTitle;
      TextView ledTypeTitle = ViewBindings.findChildViewById(rootView, id);
      if (ledTypeTitle == null) {
        break missingId;
      }

      id = R.id.lightPositionTitle;
      TextView lightPositionTitle = ViewBindings.findChildViewById(rootView, id);
      if (lightPositionTitle == null) {
        break missingId;
      }

      id = R.id.radioGroupIndicator;
      RadioGroup radioGroupIndicator = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupIndicator == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.shoePairImageView;
      ImageView shoePairImageView = ViewBindings.findChildViewById(rootView, id);
      if (shoePairImageView == null) {
        break missingId;
      }

      id = R.id.shoePairImageViewContainer;
      LinearLayout shoePairImageViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (shoePairImageViewContainer == null) {
        break missingId;
      }

      id = R.id.static_light;
      RadioButton staticLight = ViewBindings.findChildViewById(rootView, id);
      if (staticLight == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toggleButtonDirection;
      MaterialButtonToggleGroup toggleButtonDirection = ViewBindings.findChildViewById(rootView, id);
      if (toggleButtonDirection == null) {
        break missingId;
      }

      id = R.id.top;
      Button top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.top_extern;
      Button topExtern = ViewBindings.findChildViewById(rootView, id);
      if (topExtern == null) {
        break missingId;
      }

      id = R.id.top_intern;
      Button topIntern = ViewBindings.findChildViewById(rootView, id);
      if (topIntern == null) {
        break missingId;
      }

      return new ContentProgramCreateSessionBottomSheetBinding((LinearLayout) rootView, blinkLight,
          description, durationDescription, durationSlider, durationTitle, extern, fadeLight,
          intern, ledTypeTitle, lightPositionTitle, radioGroupIndicator, saveButton,
          shoePairImageView, shoePairImageViewContainer, staticLight, title, toggleButtonDirection,
          top, topExtern, topIntern);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
